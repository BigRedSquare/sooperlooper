# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_test_engine', [dirname(__file__)])
        except ImportError:
            import _test_engine
            return _test_engine
        if fp is not None:
            try:
                _mod = imp.load_module('_test_engine', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _test_engine = swig_import_helper()
    del swig_import_helper
else:
    import _test_engine
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class TestEngine(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TestEngine, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TestEngine, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _test_engine.new_TestEngine(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _test_engine.delete_TestEngine
    __del__ = lambda self : None;
    __swig_setmethods__["jack"] = _test_engine.TestEngine_jack_set
    __swig_getmethods__["jack"] = _test_engine.TestEngine_jack_get
    if _newclass:jack = _swig_property(_test_engine.TestEngine_jack_get, _test_engine.TestEngine_jack_set)
    __swig_setmethods__["looper"] = _test_engine.TestEngine_looper_set
    __swig_getmethods__["looper"] = _test_engine.TestEngine_looper_get
    if _newclass:looper = _swig_property(_test_engine.TestEngine_looper_get, _test_engine.TestEngine_looper_set)
TestEngine_swigregister = _test_engine.TestEngine_swigregister
TestEngine_swigregister(TestEngine)

class TestLooper(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TestLooper, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TestLooper, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _test_engine.new_TestLooper(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _test_engine.delete_TestLooper
    __del__ = lambda self : None;
    def run(self, *args): return _test_engine.TestLooper_run(self, *args)
    def get_control_value(self, *args): return _test_engine.TestLooper_get_control_value(self, *args)
    def request_cmd(self, *args): return _test_engine.TestLooper_request_cmd(self, *args)
    def set_port(self, *args): return _test_engine.TestLooper_set_port(self, *args)
    def set_buffer_size(self, *args): return _test_engine.TestLooper_set_buffer_size(self, *args)
    __swig_setmethods__["requested_cmd"] = _test_engine.TestLooper_requested_cmd_set
    __swig_getmethods__["requested_cmd"] = _test_engine.TestLooper_requested_cmd_get
    if _newclass:requested_cmd = _swig_property(_test_engine.TestLooper_requested_cmd_get, _test_engine.TestLooper_requested_cmd_set)
    __swig_setmethods__["last_requested_cmd"] = _test_engine.TestLooper_last_requested_cmd_set
    __swig_getmethods__["last_requested_cmd"] = _test_engine.TestLooper_last_requested_cmd_get
    if _newclass:last_requested_cmd = _swig_property(_test_engine.TestLooper_last_requested_cmd_get, _test_engine.TestLooper_last_requested_cmd_set)
    __swig_setmethods__["ok"] = _test_engine.TestLooper_ok_set
    __swig_getmethods__["ok"] = _test_engine.TestLooper_ok_get
    if _newclass:ok = _swig_property(_test_engine.TestLooper_ok_get, _test_engine.TestLooper_ok_set)
    __swig_setmethods__["request_pending"] = _test_engine.TestLooper_request_pending_set
    __swig_getmethods__["request_pending"] = _test_engine.TestLooper_request_pending_get
    if _newclass:request_pending = _swig_property(_test_engine.TestLooper_request_pending_get, _test_engine.TestLooper_request_pending_set)
TestLooper_swigregister = _test_engine.TestLooper_swigregister
TestLooper_swigregister(TestLooper)

TriggerThreshold = _test_engine.TriggerThreshold
DryLevel = _test_engine.DryLevel
WetLevel = _test_engine.WetLevel
Feedback = _test_engine.Feedback
Rate = _test_engine.Rate
ScratchPosition = _test_engine.ScratchPosition
Multi = _test_engine.Multi
TapDelayTrigger = _test_engine.TapDelayTrigger
UseFeedbackPlay = _test_engine.UseFeedbackPlay
Quantize = _test_engine.Quantize
Round = _test_engine.Round
RedoTap = _test_engine.RedoTap
Sync = _test_engine.Sync
UseRate = _test_engine.UseRate
FadeSamples = _test_engine.FadeSamples
TempoInput = _test_engine.TempoInput
PlaybackSync = _test_engine.PlaybackSync
EighthPerCycleLoop = _test_engine.EighthPerCycleLoop
UseSafetyFeedback = _test_engine.UseSafetyFeedback
InputLatency = _test_engine.InputLatency
OutputLatency = _test_engine.OutputLatency
TriggerLatency = _test_engine.TriggerLatency
MuteQuantized = _test_engine.MuteQuantized
OverdubQuantized = _test_engine.OverdubQuantized
SyncOffsetSamples = _test_engine.SyncOffsetSamples
RoundIntegerTempo = _test_engine.RoundIntegerTempo
LASTCONTROLPORT = _test_engine.LASTCONTROLPORT
RelativeSync = _test_engine.RelativeSync
State = _test_engine.State
LoopLength = _test_engine.LoopLength
LoopPosition = _test_engine.LoopPosition
CycleLength = _test_engine.CycleLength
LoopFreeMemory = _test_engine.LoopFreeMemory
LoopMemory = _test_engine.LoopMemory
Waiting = _test_engine.Waiting
TrueRate = _test_engine.TrueRate
NextState = _test_engine.NextState
LASTPORT = _test_engine.LASTPORT
AudioInputPort = _test_engine.AudioInputPort
AudioOutputPort = _test_engine.AudioOutputPort
SyncInputPort = _test_engine.SyncInputPort
SyncOutputPort = _test_engine.SyncOutputPort
PORT_COUNT = _test_engine.PORT_COUNT
QUANT_OFF = _test_engine.QUANT_OFF
QUANT_CYCLE = _test_engine.QUANT_CYCLE
QUANT_8TH = _test_engine.QUANT_8TH
QUANT_LOOP = _test_engine.QUANT_LOOP
LooperStateUnknown = _test_engine.LooperStateUnknown
LooperStateOff = _test_engine.LooperStateOff
LooperStateWaitStart = _test_engine.LooperStateWaitStart
LooperStateRecording = _test_engine.LooperStateRecording
LooperStateWaitStop = _test_engine.LooperStateWaitStop
LooperStatePlaying = _test_engine.LooperStatePlaying
LooperStateOverdubbing = _test_engine.LooperStateOverdubbing
LooperStateMultiplying = _test_engine.LooperStateMultiplying
LooperStateInserting = _test_engine.LooperStateInserting
LooperStateReplacing = _test_engine.LooperStateReplacing
LooperStateDelay = _test_engine.LooperStateDelay
LooperStateMuted = _test_engine.LooperStateMuted
LooperStateScratching = _test_engine.LooperStateScratching
LooperStateOneShot = _test_engine.LooperStateOneShot
LooperStateSubstitute = _test_engine.LooperStateSubstitute
LooperStatePaused = _test_engine.LooperStatePaused
LooperStateUndoAll = _test_engine.LooperStateUndoAll
LooperStateTriggerPlay = _test_engine.LooperStateTriggerPlay
LooperStateUndo = _test_engine.LooperStateUndo
LooperStateRedo = _test_engine.LooperStateRedo
LooperStateRedoAll = _test_engine.LooperStateRedoAll
LooperStateOffMuted = _test_engine.LooperStateOffMuted
class LoopChunk(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LoopChunk, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LoopChunk, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lLoopStart"] = _test_engine.LoopChunk_lLoopStart_set
    __swig_getmethods__["lLoopStart"] = _test_engine.LoopChunk_lLoopStart_get
    if _newclass:lLoopStart = _swig_property(_test_engine.LoopChunk_lLoopStart_get, _test_engine.LoopChunk_lLoopStart_set)
    __swig_setmethods__["lLoopLength"] = _test_engine.LoopChunk_lLoopLength_set
    __swig_getmethods__["lLoopLength"] = _test_engine.LoopChunk_lLoopLength_get
    if _newclass:lLoopLength = _swig_property(_test_engine.LoopChunk_lLoopLength_get, _test_engine.LoopChunk_lLoopLength_set)
    __swig_setmethods__["lStartAdj"] = _test_engine.LoopChunk_lStartAdj_set
    __swig_getmethods__["lStartAdj"] = _test_engine.LoopChunk_lStartAdj_get
    if _newclass:lStartAdj = _swig_property(_test_engine.LoopChunk_lStartAdj_get, _test_engine.LoopChunk_lStartAdj_set)
    __swig_setmethods__["lEndAdj"] = _test_engine.LoopChunk_lEndAdj_set
    __swig_getmethods__["lEndAdj"] = _test_engine.LoopChunk_lEndAdj_get
    if _newclass:lEndAdj = _swig_property(_test_engine.LoopChunk_lEndAdj_get, _test_engine.LoopChunk_lEndAdj_set)
    __swig_setmethods__["lInsPos"] = _test_engine.LoopChunk_lInsPos_set
    __swig_getmethods__["lInsPos"] = _test_engine.LoopChunk_lInsPos_get
    if _newclass:lInsPos = _swig_property(_test_engine.LoopChunk_lInsPos_get, _test_engine.LoopChunk_lInsPos_set)
    __swig_setmethods__["lRemLen"] = _test_engine.LoopChunk_lRemLen_set
    __swig_getmethods__["lRemLen"] = _test_engine.LoopChunk_lRemLen_get
    if _newclass:lRemLen = _swig_property(_test_engine.LoopChunk_lRemLen_get, _test_engine.LoopChunk_lRemLen_set)
    __swig_setmethods__["lMarkL"] = _test_engine.LoopChunk_lMarkL_set
    __swig_getmethods__["lMarkL"] = _test_engine.LoopChunk_lMarkL_get
    if _newclass:lMarkL = _swig_property(_test_engine.LoopChunk_lMarkL_get, _test_engine.LoopChunk_lMarkL_set)
    __swig_setmethods__["lMarkH"] = _test_engine.LoopChunk_lMarkH_set
    __swig_getmethods__["lMarkH"] = _test_engine.LoopChunk_lMarkH_get
    if _newclass:lMarkH = _swig_property(_test_engine.LoopChunk_lMarkH_get, _test_engine.LoopChunk_lMarkH_set)
    __swig_setmethods__["lMarkEndL"] = _test_engine.LoopChunk_lMarkEndL_set
    __swig_getmethods__["lMarkEndL"] = _test_engine.LoopChunk_lMarkEndL_get
    if _newclass:lMarkEndL = _swig_property(_test_engine.LoopChunk_lMarkEndL_get, _test_engine.LoopChunk_lMarkEndL_set)
    __swig_setmethods__["lMarkEndH"] = _test_engine.LoopChunk_lMarkEndH_set
    __swig_getmethods__["lMarkEndH"] = _test_engine.LoopChunk_lMarkEndH_get
    if _newclass:lMarkEndH = _swig_property(_test_engine.LoopChunk_lMarkEndH_get, _test_engine.LoopChunk_lMarkEndH_set)
    __swig_setmethods__["lSyncOffset"] = _test_engine.LoopChunk_lSyncOffset_set
    __swig_getmethods__["lSyncOffset"] = _test_engine.LoopChunk_lSyncOffset_get
    if _newclass:lSyncOffset = _swig_property(_test_engine.LoopChunk_lSyncOffset_get, _test_engine.LoopChunk_lSyncOffset_set)
    __swig_setmethods__["lSyncPos"] = _test_engine.LoopChunk_lSyncPos_set
    __swig_getmethods__["lSyncPos"] = _test_engine.LoopChunk_lSyncPos_get
    if _newclass:lSyncPos = _swig_property(_test_engine.LoopChunk_lSyncPos_get, _test_engine.LoopChunk_lSyncPos_set)
    __swig_setmethods__["lOrigSyncPos"] = _test_engine.LoopChunk_lOrigSyncPos_set
    __swig_getmethods__["lOrigSyncPos"] = _test_engine.LoopChunk_lOrigSyncPos_get
    if _newclass:lOrigSyncPos = _swig_property(_test_engine.LoopChunk_lOrigSyncPos_get, _test_engine.LoopChunk_lOrigSyncPos_set)
    __swig_setmethods__["firsttime"] = _test_engine.LoopChunk_firsttime_set
    __swig_getmethods__["firsttime"] = _test_engine.LoopChunk_firsttime_get
    if _newclass:firsttime = _swig_property(_test_engine.LoopChunk_firsttime_get, _test_engine.LoopChunk_firsttime_set)
    __swig_setmethods__["frontfill"] = _test_engine.LoopChunk_frontfill_set
    __swig_getmethods__["frontfill"] = _test_engine.LoopChunk_frontfill_get
    if _newclass:frontfill = _swig_property(_test_engine.LoopChunk_frontfill_get, _test_engine.LoopChunk_frontfill_set)
    __swig_setmethods__["backfill"] = _test_engine.LoopChunk_backfill_set
    __swig_getmethods__["backfill"] = _test_engine.LoopChunk_backfill_get
    if _newclass:backfill = _swig_property(_test_engine.LoopChunk_backfill_get, _test_engine.LoopChunk_backfill_set)
    __swig_setmethods__["valid"] = _test_engine.LoopChunk_valid_set
    __swig_getmethods__["valid"] = _test_engine.LoopChunk_valid_get
    if _newclass:valid = _swig_property(_test_engine.LoopChunk_valid_get, _test_engine.LoopChunk_valid_set)
    __swig_setmethods__["mult_out"] = _test_engine.LoopChunk_mult_out_set
    __swig_getmethods__["mult_out"] = _test_engine.LoopChunk_mult_out_get
    if _newclass:mult_out = _swig_property(_test_engine.LoopChunk_mult_out_get, _test_engine.LoopChunk_mult_out_set)
    __swig_setmethods__["lCycles"] = _test_engine.LoopChunk_lCycles_set
    __swig_getmethods__["lCycles"] = _test_engine.LoopChunk_lCycles_get
    if _newclass:lCycles = _swig_property(_test_engine.LoopChunk_lCycles_get, _test_engine.LoopChunk_lCycles_set)
    __swig_setmethods__["lCycleLength"] = _test_engine.LoopChunk_lCycleLength_set
    __swig_getmethods__["lCycleLength"] = _test_engine.LoopChunk_lCycleLength_get
    if _newclass:lCycleLength = _swig_property(_test_engine.LoopChunk_lCycleLength_get, _test_engine.LoopChunk_lCycleLength_set)
    __swig_setmethods__["dCurrPos"] = _test_engine.LoopChunk_dCurrPos_set
    __swig_getmethods__["dCurrPos"] = _test_engine.LoopChunk_dCurrPos_get
    if _newclass:dCurrPos = _swig_property(_test_engine.LoopChunk_dCurrPos_get, _test_engine.LoopChunk_dCurrPos_set)
    __swig_setmethods__["dOrigFeedback"] = _test_engine.LoopChunk_dOrigFeedback_set
    __swig_getmethods__["dOrigFeedback"] = _test_engine.LoopChunk_dOrigFeedback_get
    if _newclass:dOrigFeedback = _swig_property(_test_engine.LoopChunk_dOrigFeedback_get, _test_engine.LoopChunk_dOrigFeedback_set)
    __swig_setmethods__["srcloop"] = _test_engine.LoopChunk_srcloop_set
    __swig_getmethods__["srcloop"] = _test_engine.LoopChunk_srcloop_get
    if _newclass:srcloop = _swig_property(_test_engine.LoopChunk_srcloop_get, _test_engine.LoopChunk_srcloop_set)
    __swig_setmethods__["next"] = _test_engine.LoopChunk_next_set
    __swig_getmethods__["next"] = _test_engine.LoopChunk_next_get
    if _newclass:next = _swig_property(_test_engine.LoopChunk_next_get, _test_engine.LoopChunk_next_set)
    __swig_setmethods__["prev"] = _test_engine.LoopChunk_prev_set
    __swig_getmethods__["prev"] = _test_engine.LoopChunk_prev_get
    if _newclass:prev = _swig_property(_test_engine.LoopChunk_prev_get, _test_engine.LoopChunk_prev_set)
    def __init__(self): 
        this = _test_engine.new_LoopChunk()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _test_engine.delete_LoopChunk
    __del__ = lambda self : None;
LoopChunk_swigregister = _test_engine.LoopChunk_swigregister
LoopChunk_swigregister(LoopChunk)

class SooperLooperI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SooperLooperI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SooperLooperI, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fSampleRate"] = _test_engine.SooperLooperI_fSampleRate_set
    __swig_getmethods__["fSampleRate"] = _test_engine.SooperLooperI_fSampleRate_get
    if _newclass:fSampleRate = _swig_property(_test_engine.SooperLooperI_fSampleRate_get, _test_engine.SooperLooperI_fSampleRate_set)
    __swig_setmethods__["pSampleBuf"] = _test_engine.SooperLooperI_pSampleBuf_set
    __swig_getmethods__["pSampleBuf"] = _test_engine.SooperLooperI_pSampleBuf_get
    if _newclass:pSampleBuf = _swig_property(_test_engine.SooperLooperI_pSampleBuf_get, _test_engine.SooperLooperI_pSampleBuf_set)
    __swig_setmethods__["lLoopIndex"] = _test_engine.SooperLooperI_lLoopIndex_set
    __swig_getmethods__["lLoopIndex"] = _test_engine.SooperLooperI_lLoopIndex_get
    if _newclass:lLoopIndex = _swig_property(_test_engine.SooperLooperI_lLoopIndex_get, _test_engine.SooperLooperI_lLoopIndex_set)
    __swig_setmethods__["lChannelIndex"] = _test_engine.SooperLooperI_lChannelIndex_set
    __swig_getmethods__["lChannelIndex"] = _test_engine.SooperLooperI_lChannelIndex_get
    if _newclass:lChannelIndex = _swig_property(_test_engine.SooperLooperI_lChannelIndex_get, _test_engine.SooperLooperI_lChannelIndex_set)
    __swig_setmethods__["lBufferSize"] = _test_engine.SooperLooperI_lBufferSize_set
    __swig_getmethods__["lBufferSize"] = _test_engine.SooperLooperI_lBufferSize_get
    if _newclass:lBufferSize = _swig_property(_test_engine.SooperLooperI_lBufferSize_get, _test_engine.SooperLooperI_lBufferSize_set)
    __swig_setmethods__["lBufferSizeMask"] = _test_engine.SooperLooperI_lBufferSizeMask_set
    __swig_getmethods__["lBufferSizeMask"] = _test_engine.SooperLooperI_lBufferSizeMask_get
    if _newclass:lBufferSizeMask = _swig_property(_test_engine.SooperLooperI_lBufferSizeMask_get, _test_engine.SooperLooperI_lBufferSizeMask_set)
    __swig_setmethods__["pInputBuf"] = _test_engine.SooperLooperI_pInputBuf_set
    __swig_getmethods__["pInputBuf"] = _test_engine.SooperLooperI_pInputBuf_get
    if _newclass:pInputBuf = _swig_property(_test_engine.SooperLooperI_pInputBuf_get, _test_engine.SooperLooperI_pInputBuf_set)
    __swig_setmethods__["lInputBufSize"] = _test_engine.SooperLooperI_lInputBufSize_set
    __swig_getmethods__["lInputBufSize"] = _test_engine.SooperLooperI_lInputBufSize_get
    if _newclass:lInputBufSize = _swig_property(_test_engine.SooperLooperI_lInputBufSize_get, _test_engine.SooperLooperI_lInputBufSize_set)
    __swig_setmethods__["lInputBufMask"] = _test_engine.SooperLooperI_lInputBufMask_set
    __swig_getmethods__["lInputBufMask"] = _test_engine.SooperLooperI_lInputBufMask_get
    if _newclass:lInputBufMask = _swig_property(_test_engine.SooperLooperI_lInputBufMask_get, _test_engine.SooperLooperI_lInputBufMask_set)
    __swig_setmethods__["lInputBufReadPos"] = _test_engine.SooperLooperI_lInputBufReadPos_set
    __swig_getmethods__["lInputBufReadPos"] = _test_engine.SooperLooperI_lInputBufReadPos_get
    if _newclass:lInputBufReadPos = _swig_property(_test_engine.SooperLooperI_lInputBufReadPos_get, _test_engine.SooperLooperI_lInputBufReadPos_set)
    __swig_setmethods__["lInputBufWritePos"] = _test_engine.SooperLooperI_lInputBufWritePos_set
    __swig_getmethods__["lInputBufWritePos"] = _test_engine.SooperLooperI_lInputBufWritePos_get
    if _newclass:lInputBufWritePos = _swig_property(_test_engine.SooperLooperI_lInputBufWritePos_get, _test_engine.SooperLooperI_lInputBufWritePos_set)
    __swig_setmethods__["lFramesUntilInput"] = _test_engine.SooperLooperI_lFramesUntilInput_set
    __swig_getmethods__["lFramesUntilInput"] = _test_engine.SooperLooperI_lFramesUntilInput_get
    if _newclass:lFramesUntilInput = _swig_property(_test_engine.SooperLooperI_lFramesUntilInput_get, _test_engine.SooperLooperI_lFramesUntilInput_set)
    __swig_setmethods__["lFramesUntilFilled"] = _test_engine.SooperLooperI_lFramesUntilFilled_set
    __swig_getmethods__["lFramesUntilFilled"] = _test_engine.SooperLooperI_lFramesUntilFilled_get
    if _newclass:lFramesUntilFilled = _swig_property(_test_engine.SooperLooperI_lFramesUntilFilled_get, _test_engine.SooperLooperI_lFramesUntilFilled_set)
    __swig_setmethods__["pLoopChunks"] = _test_engine.SooperLooperI_pLoopChunks_set
    __swig_getmethods__["pLoopChunks"] = _test_engine.SooperLooperI_pLoopChunks_get
    if _newclass:pLoopChunks = _swig_property(_test_engine.SooperLooperI_pLoopChunks_get, _test_engine.SooperLooperI_pLoopChunks_set)
    __swig_setmethods__["lastLoopChunk"] = _test_engine.SooperLooperI_lastLoopChunk_set
    __swig_getmethods__["lastLoopChunk"] = _test_engine.SooperLooperI_lastLoopChunk_get
    if _newclass:lastLoopChunk = _swig_property(_test_engine.SooperLooperI_lastLoopChunk_get, _test_engine.SooperLooperI_lastLoopChunk_set)
    __swig_setmethods__["lLoopChunkCount"] = _test_engine.SooperLooperI_lLoopChunkCount_set
    __swig_getmethods__["lLoopChunkCount"] = _test_engine.SooperLooperI_lLoopChunkCount_get
    if _newclass:lLoopChunkCount = _swig_property(_test_engine.SooperLooperI_lLoopChunkCount_get, _test_engine.SooperLooperI_lLoopChunkCount_set)
    __swig_setmethods__["fTotalSecs"] = _test_engine.SooperLooperI_fTotalSecs_set
    __swig_getmethods__["fTotalSecs"] = _test_engine.SooperLooperI_fTotalSecs_get
    if _newclass:fTotalSecs = _swig_property(_test_engine.SooperLooperI_fTotalSecs_get, _test_engine.SooperLooperI_fTotalSecs_set)
    __swig_setmethods__["state"] = _test_engine.SooperLooperI_state_set
    __swig_getmethods__["state"] = _test_engine.SooperLooperI_state_get
    if _newclass:state = _swig_property(_test_engine.SooperLooperI_state_get, _test_engine.SooperLooperI_state_set)
    __swig_setmethods__["nextState"] = _test_engine.SooperLooperI_nextState_set
    __swig_getmethods__["nextState"] = _test_engine.SooperLooperI_nextState_get
    if _newclass:nextState = _swig_property(_test_engine.SooperLooperI_nextState_get, _test_engine.SooperLooperI_nextState_set)
    __swig_setmethods__["wasMuted"] = _test_engine.SooperLooperI_wasMuted_set
    __swig_getmethods__["wasMuted"] = _test_engine.SooperLooperI_wasMuted_get
    if _newclass:wasMuted = _swig_property(_test_engine.SooperLooperI_wasMuted_get, _test_engine.SooperLooperI_wasMuted_set)
    __swig_setmethods__["dPausedPos"] = _test_engine.SooperLooperI_dPausedPos_set
    __swig_getmethods__["dPausedPos"] = _test_engine.SooperLooperI_dPausedPos_get
    if _newclass:dPausedPos = _swig_property(_test_engine.SooperLooperI_dPausedPos_get, _test_engine.SooperLooperI_dPausedPos_set)
    __swig_setmethods__["safetyFeedback"] = _test_engine.SooperLooperI_safetyFeedback_set
    __swig_getmethods__["safetyFeedback"] = _test_engine.SooperLooperI_safetyFeedback_get
    if _newclass:safetyFeedback = _swig_property(_test_engine.SooperLooperI_safetyFeedback_get, _test_engine.SooperLooperI_safetyFeedback_set)
    __swig_setmethods__["waitingForSync"] = _test_engine.SooperLooperI_waitingForSync_set
    __swig_getmethods__["waitingForSync"] = _test_engine.SooperLooperI_waitingForSync_get
    if _newclass:waitingForSync = _swig_property(_test_engine.SooperLooperI_waitingForSync_get, _test_engine.SooperLooperI_waitingForSync_set)
    __swig_setmethods__["recSyncEnded"] = _test_engine.SooperLooperI_recSyncEnded_set
    __swig_getmethods__["recSyncEnded"] = _test_engine.SooperLooperI_recSyncEnded_get
    if _newclass:recSyncEnded = _swig_property(_test_engine.SooperLooperI_recSyncEnded_get, _test_engine.SooperLooperI_recSyncEnded_set)
    __swig_setmethods__["lLastMultiCtrl"] = _test_engine.SooperLooperI_lLastMultiCtrl_set
    __swig_getmethods__["lLastMultiCtrl"] = _test_engine.SooperLooperI_lLastMultiCtrl_get
    if _newclass:lLastMultiCtrl = _swig_property(_test_engine.SooperLooperI_lLastMultiCtrl_get, _test_engine.SooperLooperI_lLastMultiCtrl_set)
    __swig_setmethods__["fQuantizeMode"] = _test_engine.SooperLooperI_fQuantizeMode_set
    __swig_getmethods__["fQuantizeMode"] = _test_engine.SooperLooperI_fQuantizeMode_get
    if _newclass:fQuantizeMode = _swig_property(_test_engine.SooperLooperI_fQuantizeMode_get, _test_engine.SooperLooperI_fQuantizeMode_set)
    __swig_setmethods__["fRoundMode"] = _test_engine.SooperLooperI_fRoundMode_set
    __swig_getmethods__["fRoundMode"] = _test_engine.SooperLooperI_fRoundMode_get
    if _newclass:fRoundMode = _swig_property(_test_engine.SooperLooperI_fRoundMode_get, _test_engine.SooperLooperI_fRoundMode_set)
    __swig_setmethods__["fRedoTapMode"] = _test_engine.SooperLooperI_fRedoTapMode_set
    __swig_getmethods__["fRedoTapMode"] = _test_engine.SooperLooperI_fRedoTapMode_get
    if _newclass:fRedoTapMode = _swig_property(_test_engine.SooperLooperI_fRedoTapMode_get, _test_engine.SooperLooperI_fRedoTapMode_set)
    __swig_setmethods__["fSyncMode"] = _test_engine.SooperLooperI_fSyncMode_set
    __swig_getmethods__["fSyncMode"] = _test_engine.SooperLooperI_fSyncMode_get
    if _newclass:fSyncMode = _swig_property(_test_engine.SooperLooperI_fSyncMode_get, _test_engine.SooperLooperI_fSyncMode_set)
    __swig_setmethods__["fMuteQuantized"] = _test_engine.SooperLooperI_fMuteQuantized_set
    __swig_getmethods__["fMuteQuantized"] = _test_engine.SooperLooperI_fMuteQuantized_get
    if _newclass:fMuteQuantized = _swig_property(_test_engine.SooperLooperI_fMuteQuantized_get, _test_engine.SooperLooperI_fMuteQuantized_set)
    __swig_setmethods__["fOverdubQuantized"] = _test_engine.SooperLooperI_fOverdubQuantized_set
    __swig_getmethods__["fOverdubQuantized"] = _test_engine.SooperLooperI_fOverdubQuantized_get
    if _newclass:fOverdubQuantized = _swig_property(_test_engine.SooperLooperI_fOverdubQuantized_get, _test_engine.SooperLooperI_fOverdubQuantized_set)
    __swig_setmethods__["bReplaceQuantized"] = _test_engine.SooperLooperI_bReplaceQuantized_set
    __swig_getmethods__["bReplaceQuantized"] = _test_engine.SooperLooperI_bReplaceQuantized_get
    if _newclass:bReplaceQuantized = _swig_property(_test_engine.SooperLooperI_bReplaceQuantized_get, _test_engine.SooperLooperI_bReplaceQuantized_set)
    __swig_setmethods__["bHoldMode"] = _test_engine.SooperLooperI_bHoldMode_set
    __swig_getmethods__["bHoldMode"] = _test_engine.SooperLooperI_bHoldMode_get
    if _newclass:bHoldMode = _swig_property(_test_engine.SooperLooperI_bHoldMode_get, _test_engine.SooperLooperI_bHoldMode_set)
    __swig_setmethods__["donePlaySync"] = _test_engine.SooperLooperI_donePlaySync_set
    __swig_getmethods__["donePlaySync"] = _test_engine.SooperLooperI_donePlaySync_get
    if _newclass:donePlaySync = _swig_property(_test_engine.SooperLooperI_donePlaySync_get, _test_engine.SooperLooperI_donePlaySync_set)
    __swig_setmethods__["rounding"] = _test_engine.SooperLooperI_rounding_set
    __swig_getmethods__["rounding"] = _test_engine.SooperLooperI_rounding_get
    if _newclass:rounding = _swig_property(_test_engine.SooperLooperI_rounding_get, _test_engine.SooperLooperI_rounding_set)
    __swig_setmethods__["lTapTrigSamples"] = _test_engine.SooperLooperI_lTapTrigSamples_set
    __swig_getmethods__["lTapTrigSamples"] = _test_engine.SooperLooperI_lTapTrigSamples_get
    if _newclass:lTapTrigSamples = _swig_property(_test_engine.SooperLooperI_lTapTrigSamples_get, _test_engine.SooperLooperI_lTapTrigSamples_set)
    __swig_setmethods__["fLastOverTrig"] = _test_engine.SooperLooperI_fLastOverTrig_set
    __swig_getmethods__["fLastOverTrig"] = _test_engine.SooperLooperI_fLastOverTrig_get
    if _newclass:fLastOverTrig = _swig_property(_test_engine.SooperLooperI_fLastOverTrig_get, _test_engine.SooperLooperI_fLastOverTrig_set)
    __swig_setmethods__["lOverTrigSamples"] = _test_engine.SooperLooperI_lOverTrigSamples_set
    __swig_getmethods__["lOverTrigSamples"] = _test_engine.SooperLooperI_lOverTrigSamples_get
    if _newclass:lOverTrigSamples = _swig_property(_test_engine.SooperLooperI_lOverTrigSamples_get, _test_engine.SooperLooperI_lOverTrigSamples_set)
    __swig_setmethods__["lRampSamples"] = _test_engine.SooperLooperI_lRampSamples_set
    __swig_getmethods__["lRampSamples"] = _test_engine.SooperLooperI_lRampSamples_get
    if _newclass:lRampSamples = _swig_property(_test_engine.SooperLooperI_lRampSamples_get, _test_engine.SooperLooperI_lRampSamples_set)
    __swig_setmethods__["fCurrRate"] = _test_engine.SooperLooperI_fCurrRate_set
    __swig_getmethods__["fCurrRate"] = _test_engine.SooperLooperI_fCurrRate_get
    if _newclass:fCurrRate = _swig_property(_test_engine.SooperLooperI_fCurrRate_get, _test_engine.SooperLooperI_fCurrRate_set)
    __swig_setmethods__["fNextCurrRate"] = _test_engine.SooperLooperI_fNextCurrRate_set
    __swig_getmethods__["fNextCurrRate"] = _test_engine.SooperLooperI_fNextCurrRate_get
    if _newclass:fNextCurrRate = _swig_property(_test_engine.SooperLooperI_fNextCurrRate_get, _test_engine.SooperLooperI_fNextCurrRate_set)
    __swig_setmethods__["fLastScratchVal"] = _test_engine.SooperLooperI_fLastScratchVal_set
    __swig_getmethods__["fLastScratchVal"] = _test_engine.SooperLooperI_fLastScratchVal_get
    if _newclass:fLastScratchVal = _swig_property(_test_engine.SooperLooperI_fLastScratchVal_get, _test_engine.SooperLooperI_fLastScratchVal_set)
    __swig_setmethods__["lScratchSamples"] = _test_engine.SooperLooperI_lScratchSamples_set
    __swig_getmethods__["lScratchSamples"] = _test_engine.SooperLooperI_lScratchSamples_get
    if _newclass:lScratchSamples = _swig_property(_test_engine.SooperLooperI_lScratchSamples_get, _test_engine.SooperLooperI_lScratchSamples_set)
    __swig_setmethods__["fCurrScratchRate"] = _test_engine.SooperLooperI_fCurrScratchRate_set
    __swig_getmethods__["fCurrScratchRate"] = _test_engine.SooperLooperI_fCurrScratchRate_get
    if _newclass:fCurrScratchRate = _swig_property(_test_engine.SooperLooperI_fCurrScratchRate_get, _test_engine.SooperLooperI_fCurrScratchRate_set)
    __swig_setmethods__["fLastRateSwitch"] = _test_engine.SooperLooperI_fLastRateSwitch_set
    __swig_getmethods__["fLastRateSwitch"] = _test_engine.SooperLooperI_fLastRateSwitch_get
    if _newclass:fLastRateSwitch = _swig_property(_test_engine.SooperLooperI_fLastRateSwitch_get, _test_engine.SooperLooperI_fLastRateSwitch_set)
    __swig_setmethods__["bRateCtrlActive"] = _test_engine.SooperLooperI_bRateCtrlActive_set
    __swig_getmethods__["bRateCtrlActive"] = _test_engine.SooperLooperI_bRateCtrlActive_get
    if _newclass:bRateCtrlActive = _swig_property(_test_engine.SooperLooperI_bRateCtrlActive_get, _test_engine.SooperLooperI_bRateCtrlActive_set)
    __swig_setmethods__["fLastTapCtrl"] = _test_engine.SooperLooperI_fLastTapCtrl_set
    __swig_getmethods__["fLastTapCtrl"] = _test_engine.SooperLooperI_fLastTapCtrl_get
    if _newclass:fLastTapCtrl = _swig_property(_test_engine.SooperLooperI_fLastTapCtrl_get, _test_engine.SooperLooperI_fLastTapCtrl_set)
    __swig_setmethods__["bPreTap"] = _test_engine.SooperLooperI_bPreTap_set
    __swig_getmethods__["bPreTap"] = _test_engine.SooperLooperI_bPreTap_get
    if _newclass:bPreTap = _swig_property(_test_engine.SooperLooperI_bPreTap_get, _test_engine.SooperLooperI_bPreTap_set)
    __swig_setmethods__["headLoopChunk"] = _test_engine.SooperLooperI_headLoopChunk_set
    __swig_getmethods__["headLoopChunk"] = _test_engine.SooperLooperI_headLoopChunk_get
    if _newclass:headLoopChunk = _swig_property(_test_engine.SooperLooperI_headLoopChunk_get, _test_engine.SooperLooperI_headLoopChunk_set)
    __swig_setmethods__["tailLoopChunk"] = _test_engine.SooperLooperI_tailLoopChunk_set
    __swig_getmethods__["tailLoopChunk"] = _test_engine.SooperLooperI_tailLoopChunk_get
    if _newclass:tailLoopChunk = _swig_property(_test_engine.SooperLooperI_tailLoopChunk_get, _test_engine.SooperLooperI_tailLoopChunk_set)
    __swig_setmethods__["lHeadLoopChunk"] = _test_engine.SooperLooperI_lHeadLoopChunk_set
    __swig_getmethods__["lHeadLoopChunk"] = _test_engine.SooperLooperI_lHeadLoopChunk_get
    if _newclass:lHeadLoopChunk = _swig_property(_test_engine.SooperLooperI_lHeadLoopChunk_get, _test_engine.SooperLooperI_lHeadLoopChunk_set)
    __swig_setmethods__["lTailLoopChunk"] = _test_engine.SooperLooperI_lTailLoopChunk_set
    __swig_getmethods__["lTailLoopChunk"] = _test_engine.SooperLooperI_lTailLoopChunk_get
    if _newclass:lTailLoopChunk = _swig_property(_test_engine.SooperLooperI_lTailLoopChunk_get, _test_engine.SooperLooperI_lTailLoopChunk_set)
    __swig_setmethods__["fWetCurr"] = _test_engine.SooperLooperI_fWetCurr_set
    __swig_getmethods__["fWetCurr"] = _test_engine.SooperLooperI_fWetCurr_get
    if _newclass:fWetCurr = _swig_property(_test_engine.SooperLooperI_fWetCurr_get, _test_engine.SooperLooperI_fWetCurr_set)
    __swig_setmethods__["fWetTarget"] = _test_engine.SooperLooperI_fWetTarget_set
    __swig_getmethods__["fWetTarget"] = _test_engine.SooperLooperI_fWetTarget_get
    if _newclass:fWetTarget = _swig_property(_test_engine.SooperLooperI_fWetTarget_get, _test_engine.SooperLooperI_fWetTarget_set)
    __swig_setmethods__["fDryCurr"] = _test_engine.SooperLooperI_fDryCurr_set
    __swig_getmethods__["fDryCurr"] = _test_engine.SooperLooperI_fDryCurr_get
    if _newclass:fDryCurr = _swig_property(_test_engine.SooperLooperI_fDryCurr_get, _test_engine.SooperLooperI_fDryCurr_set)
    __swig_setmethods__["fDryTarget"] = _test_engine.SooperLooperI_fDryTarget_set
    __swig_getmethods__["fDryTarget"] = _test_engine.SooperLooperI_fDryTarget_get
    if _newclass:fDryTarget = _swig_property(_test_engine.SooperLooperI_fDryTarget_get, _test_engine.SooperLooperI_fDryTarget_set)
    __swig_setmethods__["fRateCurr"] = _test_engine.SooperLooperI_fRateCurr_set
    __swig_getmethods__["fRateCurr"] = _test_engine.SooperLooperI_fRateCurr_get
    if _newclass:fRateCurr = _swig_property(_test_engine.SooperLooperI_fRateCurr_get, _test_engine.SooperLooperI_fRateCurr_set)
    __swig_setmethods__["fRateTarget"] = _test_engine.SooperLooperI_fRateTarget_set
    __swig_getmethods__["fRateTarget"] = _test_engine.SooperLooperI_fRateTarget_get
    if _newclass:fRateTarget = _swig_property(_test_engine.SooperLooperI_fRateTarget_get, _test_engine.SooperLooperI_fRateTarget_set)
    __swig_setmethods__["fScratchPosCurr"] = _test_engine.SooperLooperI_fScratchPosCurr_set
    __swig_getmethods__["fScratchPosCurr"] = _test_engine.SooperLooperI_fScratchPosCurr_get
    if _newclass:fScratchPosCurr = _swig_property(_test_engine.SooperLooperI_fScratchPosCurr_get, _test_engine.SooperLooperI_fScratchPosCurr_set)
    __swig_setmethods__["fScratchPosTarget"] = _test_engine.SooperLooperI_fScratchPosTarget_set
    __swig_getmethods__["fScratchPosTarget"] = _test_engine.SooperLooperI_fScratchPosTarget_get
    if _newclass:fScratchPosTarget = _swig_property(_test_engine.SooperLooperI_fScratchPosTarget_get, _test_engine.SooperLooperI_fScratchPosTarget_set)
    __swig_setmethods__["fFeedbackCurr"] = _test_engine.SooperLooperI_fFeedbackCurr_set
    __swig_getmethods__["fFeedbackCurr"] = _test_engine.SooperLooperI_fFeedbackCurr_get
    if _newclass:fFeedbackCurr = _swig_property(_test_engine.SooperLooperI_fFeedbackCurr_get, _test_engine.SooperLooperI_fFeedbackCurr_set)
    __swig_setmethods__["fFeedbackTarget"] = _test_engine.SooperLooperI_fFeedbackTarget_set
    __swig_getmethods__["fFeedbackTarget"] = _test_engine.SooperLooperI_fFeedbackTarget_get
    if _newclass:fFeedbackTarget = _swig_property(_test_engine.SooperLooperI_fFeedbackTarget_get, _test_engine.SooperLooperI_fFeedbackTarget_set)
    __swig_setmethods__["fLoopFadeAtten"] = _test_engine.SooperLooperI_fLoopFadeAtten_set
    __swig_getmethods__["fLoopFadeAtten"] = _test_engine.SooperLooperI_fLoopFadeAtten_get
    if _newclass:fLoopFadeAtten = _swig_property(_test_engine.SooperLooperI_fLoopFadeAtten_get, _test_engine.SooperLooperI_fLoopFadeAtten_set)
    __swig_setmethods__["fLoopFadeDelta"] = _test_engine.SooperLooperI_fLoopFadeDelta_set
    __swig_getmethods__["fLoopFadeDelta"] = _test_engine.SooperLooperI_fLoopFadeDelta_get
    if _newclass:fLoopFadeDelta = _swig_property(_test_engine.SooperLooperI_fLoopFadeDelta_get, _test_engine.SooperLooperI_fLoopFadeDelta_set)
    __swig_setmethods__["fLoopSrcFadeAtten"] = _test_engine.SooperLooperI_fLoopSrcFadeAtten_set
    __swig_getmethods__["fLoopSrcFadeAtten"] = _test_engine.SooperLooperI_fLoopSrcFadeAtten_get
    if _newclass:fLoopSrcFadeAtten = _swig_property(_test_engine.SooperLooperI_fLoopSrcFadeAtten_get, _test_engine.SooperLooperI_fLoopSrcFadeAtten_set)
    __swig_setmethods__["fLoopSrcFadeDelta"] = _test_engine.SooperLooperI_fLoopSrcFadeDelta_set
    __swig_getmethods__["fLoopSrcFadeDelta"] = _test_engine.SooperLooperI_fLoopSrcFadeDelta_get
    if _newclass:fLoopSrcFadeDelta = _swig_property(_test_engine.SooperLooperI_fLoopSrcFadeDelta_get, _test_engine.SooperLooperI_fLoopSrcFadeDelta_set)
    __swig_setmethods__["fPlayFadeAtten"] = _test_engine.SooperLooperI_fPlayFadeAtten_set
    __swig_getmethods__["fPlayFadeAtten"] = _test_engine.SooperLooperI_fPlayFadeAtten_get
    if _newclass:fPlayFadeAtten = _swig_property(_test_engine.SooperLooperI_fPlayFadeAtten_get, _test_engine.SooperLooperI_fPlayFadeAtten_set)
    __swig_setmethods__["fPlayFadeDelta"] = _test_engine.SooperLooperI_fPlayFadeDelta_set
    __swig_getmethods__["fPlayFadeDelta"] = _test_engine.SooperLooperI_fPlayFadeDelta_get
    if _newclass:fPlayFadeDelta = _swig_property(_test_engine.SooperLooperI_fPlayFadeDelta_get, _test_engine.SooperLooperI_fPlayFadeDelta_set)
    __swig_setmethods__["fFeedFadeAtten"] = _test_engine.SooperLooperI_fFeedFadeAtten_set
    __swig_getmethods__["fFeedFadeAtten"] = _test_engine.SooperLooperI_fFeedFadeAtten_get
    if _newclass:fFeedFadeAtten = _swig_property(_test_engine.SooperLooperI_fFeedFadeAtten_get, _test_engine.SooperLooperI_fFeedFadeAtten_set)
    __swig_setmethods__["fFeedFadeDelta"] = _test_engine.SooperLooperI_fFeedFadeDelta_set
    __swig_getmethods__["fFeedFadeDelta"] = _test_engine.SooperLooperI_fFeedFadeDelta_get
    if _newclass:fFeedFadeDelta = _swig_property(_test_engine.SooperLooperI_fFeedFadeDelta_get, _test_engine.SooperLooperI_fFeedFadeDelta_set)
    __swig_setmethods__["fFeedSrcFadeAtten"] = _test_engine.SooperLooperI_fFeedSrcFadeAtten_set
    __swig_getmethods__["fFeedSrcFadeAtten"] = _test_engine.SooperLooperI_fFeedSrcFadeAtten_get
    if _newclass:fFeedSrcFadeAtten = _swig_property(_test_engine.SooperLooperI_fFeedSrcFadeAtten_get, _test_engine.SooperLooperI_fFeedSrcFadeAtten_set)
    __swig_setmethods__["fFeedSrcFadeDelta"] = _test_engine.SooperLooperI_fFeedSrcFadeDelta_set
    __swig_getmethods__["fFeedSrcFadeDelta"] = _test_engine.SooperLooperI_fFeedSrcFadeDelta_get
    if _newclass:fFeedSrcFadeDelta = _swig_property(_test_engine.SooperLooperI_fFeedSrcFadeDelta_get, _test_engine.SooperLooperI_fFeedSrcFadeDelta_set)
    __swig_setmethods__["fLoopXfadeTime"] = _test_engine.SooperLooperI_fLoopXfadeTime_set
    __swig_getmethods__["fLoopXfadeTime"] = _test_engine.SooperLooperI_fLoopXfadeTime_get
    if _newclass:fLoopXfadeTime = _swig_property(_test_engine.SooperLooperI_fLoopXfadeTime_get, _test_engine.SooperLooperI_fLoopXfadeTime_set)
    __swig_setmethods__["lSamplesSinceSync"] = _test_engine.SooperLooperI_lSamplesSinceSync_set
    __swig_getmethods__["lSamplesSinceSync"] = _test_engine.SooperLooperI_lSamplesSinceSync_get
    if _newclass:lSamplesSinceSync = _swig_property(_test_engine.SooperLooperI_lSamplesSinceSync_get, _test_engine.SooperLooperI_lSamplesSinceSync_set)
    __swig_setmethods__["pfWet"] = _test_engine.SooperLooperI_pfWet_set
    __swig_getmethods__["pfWet"] = _test_engine.SooperLooperI_pfWet_get
    if _newclass:pfWet = _swig_property(_test_engine.SooperLooperI_pfWet_get, _test_engine.SooperLooperI_pfWet_set)
    __swig_setmethods__["pfDry"] = _test_engine.SooperLooperI_pfDry_set
    __swig_getmethods__["pfDry"] = _test_engine.SooperLooperI_pfDry_get
    if _newclass:pfDry = _swig_property(_test_engine.SooperLooperI_pfDry_get, _test_engine.SooperLooperI_pfDry_set)
    __swig_setmethods__["pfFeedback"] = _test_engine.SooperLooperI_pfFeedback_set
    __swig_getmethods__["pfFeedback"] = _test_engine.SooperLooperI_pfFeedback_get
    if _newclass:pfFeedback = _swig_property(_test_engine.SooperLooperI_pfFeedback_get, _test_engine.SooperLooperI_pfFeedback_set)
    __swig_setmethods__["pfTrigThresh"] = _test_engine.SooperLooperI_pfTrigThresh_set
    __swig_getmethods__["pfTrigThresh"] = _test_engine.SooperLooperI_pfTrigThresh_get
    if _newclass:pfTrigThresh = _swig_property(_test_engine.SooperLooperI_pfTrigThresh_get, _test_engine.SooperLooperI_pfTrigThresh_set)
    __swig_setmethods__["pfRate"] = _test_engine.SooperLooperI_pfRate_set
    __swig_getmethods__["pfRate"] = _test_engine.SooperLooperI_pfRate_get
    if _newclass:pfRate = _swig_property(_test_engine.SooperLooperI_pfRate_get, _test_engine.SooperLooperI_pfRate_set)
    __swig_setmethods__["pfScratchPos"] = _test_engine.SooperLooperI_pfScratchPos_set
    __swig_getmethods__["pfScratchPos"] = _test_engine.SooperLooperI_pfScratchPos_get
    if _newclass:pfScratchPos = _swig_property(_test_engine.SooperLooperI_pfScratchPos_get, _test_engine.SooperLooperI_pfScratchPos_set)
    __swig_setmethods__["pfMultiCtrl"] = _test_engine.SooperLooperI_pfMultiCtrl_set
    __swig_getmethods__["pfMultiCtrl"] = _test_engine.SooperLooperI_pfMultiCtrl_get
    if _newclass:pfMultiCtrl = _swig_property(_test_engine.SooperLooperI_pfMultiCtrl_get, _test_engine.SooperLooperI_pfMultiCtrl_set)
    __swig_setmethods__["pfUseFeedbackPlay"] = _test_engine.SooperLooperI_pfUseFeedbackPlay_set
    __swig_getmethods__["pfUseFeedbackPlay"] = _test_engine.SooperLooperI_pfUseFeedbackPlay_get
    if _newclass:pfUseFeedbackPlay = _swig_property(_test_engine.SooperLooperI_pfUseFeedbackPlay_get, _test_engine.SooperLooperI_pfUseFeedbackPlay_set)
    __swig_setmethods__["pfTapCtrl"] = _test_engine.SooperLooperI_pfTapCtrl_set
    __swig_getmethods__["pfTapCtrl"] = _test_engine.SooperLooperI_pfTapCtrl_get
    if _newclass:pfTapCtrl = _swig_property(_test_engine.SooperLooperI_pfTapCtrl_get, _test_engine.SooperLooperI_pfTapCtrl_set)
    __swig_setmethods__["pfQuantMode"] = _test_engine.SooperLooperI_pfQuantMode_set
    __swig_getmethods__["pfQuantMode"] = _test_engine.SooperLooperI_pfQuantMode_get
    if _newclass:pfQuantMode = _swig_property(_test_engine.SooperLooperI_pfQuantMode_get, _test_engine.SooperLooperI_pfQuantMode_set)
    __swig_setmethods__["pfRoundMode"] = _test_engine.SooperLooperI_pfRoundMode_set
    __swig_getmethods__["pfRoundMode"] = _test_engine.SooperLooperI_pfRoundMode_get
    if _newclass:pfRoundMode = _swig_property(_test_engine.SooperLooperI_pfRoundMode_get, _test_engine.SooperLooperI_pfRoundMode_set)
    __swig_setmethods__["pfSyncMode"] = _test_engine.SooperLooperI_pfSyncMode_set
    __swig_getmethods__["pfSyncMode"] = _test_engine.SooperLooperI_pfSyncMode_get
    if _newclass:pfSyncMode = _swig_property(_test_engine.SooperLooperI_pfSyncMode_get, _test_engine.SooperLooperI_pfSyncMode_set)
    __swig_setmethods__["pfPlaybackSyncMode"] = _test_engine.SooperLooperI_pfPlaybackSyncMode_set
    __swig_getmethods__["pfPlaybackSyncMode"] = _test_engine.SooperLooperI_pfPlaybackSyncMode_get
    if _newclass:pfPlaybackSyncMode = _swig_property(_test_engine.SooperLooperI_pfPlaybackSyncMode_get, _test_engine.SooperLooperI_pfPlaybackSyncMode_set)
    __swig_setmethods__["pfRateCtrlActive"] = _test_engine.SooperLooperI_pfRateCtrlActive_set
    __swig_getmethods__["pfRateCtrlActive"] = _test_engine.SooperLooperI_pfRateCtrlActive_get
    if _newclass:pfRateCtrlActive = _swig_property(_test_engine.SooperLooperI_pfRateCtrlActive_get, _test_engine.SooperLooperI_pfRateCtrlActive_set)
    __swig_setmethods__["pfMuteQuantized"] = _test_engine.SooperLooperI_pfMuteQuantized_set
    __swig_getmethods__["pfMuteQuantized"] = _test_engine.SooperLooperI_pfMuteQuantized_get
    if _newclass:pfMuteQuantized = _swig_property(_test_engine.SooperLooperI_pfMuteQuantized_get, _test_engine.SooperLooperI_pfMuteQuantized_set)
    __swig_setmethods__["pfOverdubQuantized"] = _test_engine.SooperLooperI_pfOverdubQuantized_set
    __swig_getmethods__["pfOverdubQuantized"] = _test_engine.SooperLooperI_pfOverdubQuantized_get
    if _newclass:pfOverdubQuantized = _swig_property(_test_engine.SooperLooperI_pfOverdubQuantized_get, _test_engine.SooperLooperI_pfOverdubQuantized_set)
    __swig_setmethods__["pfSyncOffsetSamples"] = _test_engine.SooperLooperI_pfSyncOffsetSamples_set
    __swig_getmethods__["pfSyncOffsetSamples"] = _test_engine.SooperLooperI_pfSyncOffsetSamples_get
    if _newclass:pfSyncOffsetSamples = _swig_property(_test_engine.SooperLooperI_pfSyncOffsetSamples_get, _test_engine.SooperLooperI_pfSyncOffsetSamples_set)
    __swig_setmethods__["pfRoundIntegerTempo"] = _test_engine.SooperLooperI_pfRoundIntegerTempo_set
    __swig_getmethods__["pfRoundIntegerTempo"] = _test_engine.SooperLooperI_pfRoundIntegerTempo_get
    if _newclass:pfRoundIntegerTempo = _swig_property(_test_engine.SooperLooperI_pfRoundIntegerTempo_get, _test_engine.SooperLooperI_pfRoundIntegerTempo_set)
    __swig_setmethods__["pfXfadeSamples"] = _test_engine.SooperLooperI_pfXfadeSamples_set
    __swig_getmethods__["pfXfadeSamples"] = _test_engine.SooperLooperI_pfXfadeSamples_get
    if _newclass:pfXfadeSamples = _swig_property(_test_engine.SooperLooperI_pfXfadeSamples_get, _test_engine.SooperLooperI_pfXfadeSamples_set)
    __swig_setmethods__["pfTempo"] = _test_engine.SooperLooperI_pfTempo_set
    __swig_getmethods__["pfTempo"] = _test_engine.SooperLooperI_pfTempo_get
    if _newclass:pfTempo = _swig_property(_test_engine.SooperLooperI_pfTempo_get, _test_engine.SooperLooperI_pfTempo_set)
    __swig_setmethods__["pfEighthPerCycle"] = _test_engine.SooperLooperI_pfEighthPerCycle_set
    __swig_getmethods__["pfEighthPerCycle"] = _test_engine.SooperLooperI_pfEighthPerCycle_get
    if _newclass:pfEighthPerCycle = _swig_property(_test_engine.SooperLooperI_pfEighthPerCycle_get, _test_engine.SooperLooperI_pfEighthPerCycle_set)
    __swig_setmethods__["pfUseSafetyFeedback"] = _test_engine.SooperLooperI_pfUseSafetyFeedback_set
    __swig_getmethods__["pfUseSafetyFeedback"] = _test_engine.SooperLooperI_pfUseSafetyFeedback_get
    if _newclass:pfUseSafetyFeedback = _swig_property(_test_engine.SooperLooperI_pfUseSafetyFeedback_get, _test_engine.SooperLooperI_pfUseSafetyFeedback_set)
    __swig_setmethods__["pfInputLatency"] = _test_engine.SooperLooperI_pfInputLatency_set
    __swig_getmethods__["pfInputLatency"] = _test_engine.SooperLooperI_pfInputLatency_get
    if _newclass:pfInputLatency = _swig_property(_test_engine.SooperLooperI_pfInputLatency_get, _test_engine.SooperLooperI_pfInputLatency_set)
    __swig_setmethods__["pfOutputLatency"] = _test_engine.SooperLooperI_pfOutputLatency_set
    __swig_getmethods__["pfOutputLatency"] = _test_engine.SooperLooperI_pfOutputLatency_get
    if _newclass:pfOutputLatency = _swig_property(_test_engine.SooperLooperI_pfOutputLatency_get, _test_engine.SooperLooperI_pfOutputLatency_set)
    __swig_setmethods__["pfTriggerLatency"] = _test_engine.SooperLooperI_pfTriggerLatency_set
    __swig_getmethods__["pfTriggerLatency"] = _test_engine.SooperLooperI_pfTriggerLatency_get
    if _newclass:pfTriggerLatency = _swig_property(_test_engine.SooperLooperI_pfTriggerLatency_get, _test_engine.SooperLooperI_pfTriggerLatency_set)
    __swig_setmethods__["pfRedoTapMode"] = _test_engine.SooperLooperI_pfRedoTapMode_set
    __swig_getmethods__["pfRedoTapMode"] = _test_engine.SooperLooperI_pfRedoTapMode_get
    if _newclass:pfRedoTapMode = _swig_property(_test_engine.SooperLooperI_pfRedoTapMode_get, _test_engine.SooperLooperI_pfRedoTapMode_set)
    __swig_setmethods__["pfInput"] = _test_engine.SooperLooperI_pfInput_set
    __swig_getmethods__["pfInput"] = _test_engine.SooperLooperI_pfInput_get
    if _newclass:pfInput = _swig_property(_test_engine.SooperLooperI_pfInput_get, _test_engine.SooperLooperI_pfInput_set)
    __swig_setmethods__["pfOutput"] = _test_engine.SooperLooperI_pfOutput_set
    __swig_getmethods__["pfOutput"] = _test_engine.SooperLooperI_pfOutput_get
    if _newclass:pfOutput = _swig_property(_test_engine.SooperLooperI_pfOutput_get, _test_engine.SooperLooperI_pfOutput_set)
    __swig_setmethods__["pfSyncInput"] = _test_engine.SooperLooperI_pfSyncInput_set
    __swig_getmethods__["pfSyncInput"] = _test_engine.SooperLooperI_pfSyncInput_get
    if _newclass:pfSyncInput = _swig_property(_test_engine.SooperLooperI_pfSyncInput_get, _test_engine.SooperLooperI_pfSyncInput_set)
    __swig_setmethods__["pfSyncOutput"] = _test_engine.SooperLooperI_pfSyncOutput_set
    __swig_getmethods__["pfSyncOutput"] = _test_engine.SooperLooperI_pfSyncOutput_get
    if _newclass:pfSyncOutput = _swig_property(_test_engine.SooperLooperI_pfSyncOutput_get, _test_engine.SooperLooperI_pfSyncOutput_set)
    __swig_setmethods__["pfStateOut"] = _test_engine.SooperLooperI_pfStateOut_set
    __swig_getmethods__["pfStateOut"] = _test_engine.SooperLooperI_pfStateOut_get
    if _newclass:pfStateOut = _swig_property(_test_engine.SooperLooperI_pfStateOut_get, _test_engine.SooperLooperI_pfStateOut_set)
    __swig_setmethods__["pfLoopLength"] = _test_engine.SooperLooperI_pfLoopLength_set
    __swig_getmethods__["pfLoopLength"] = _test_engine.SooperLooperI_pfLoopLength_get
    if _newclass:pfLoopLength = _swig_property(_test_engine.SooperLooperI_pfLoopLength_get, _test_engine.SooperLooperI_pfLoopLength_set)
    __swig_setmethods__["pfLoopPos"] = _test_engine.SooperLooperI_pfLoopPos_set
    __swig_getmethods__["pfLoopPos"] = _test_engine.SooperLooperI_pfLoopPos_get
    if _newclass:pfLoopPos = _swig_property(_test_engine.SooperLooperI_pfLoopPos_get, _test_engine.SooperLooperI_pfLoopPos_set)
    __swig_setmethods__["pfCycleLength"] = _test_engine.SooperLooperI_pfCycleLength_set
    __swig_getmethods__["pfCycleLength"] = _test_engine.SooperLooperI_pfCycleLength_get
    if _newclass:pfCycleLength = _swig_property(_test_engine.SooperLooperI_pfCycleLength_get, _test_engine.SooperLooperI_pfCycleLength_set)
    __swig_setmethods__["pfSecsFree"] = _test_engine.SooperLooperI_pfSecsFree_set
    __swig_getmethods__["pfSecsFree"] = _test_engine.SooperLooperI_pfSecsFree_get
    if _newclass:pfSecsFree = _swig_property(_test_engine.SooperLooperI_pfSecsFree_get, _test_engine.SooperLooperI_pfSecsFree_set)
    __swig_setmethods__["pfSecsTotal"] = _test_engine.SooperLooperI_pfSecsTotal_set
    __swig_getmethods__["pfSecsTotal"] = _test_engine.SooperLooperI_pfSecsTotal_get
    if _newclass:pfSecsTotal = _swig_property(_test_engine.SooperLooperI_pfSecsTotal_get, _test_engine.SooperLooperI_pfSecsTotal_set)
    __swig_setmethods__["pfWaiting"] = _test_engine.SooperLooperI_pfWaiting_set
    __swig_getmethods__["pfWaiting"] = _test_engine.SooperLooperI_pfWaiting_get
    if _newclass:pfWaiting = _swig_property(_test_engine.SooperLooperI_pfWaiting_get, _test_engine.SooperLooperI_pfWaiting_set)
    __swig_setmethods__["pfRateOutput"] = _test_engine.SooperLooperI_pfRateOutput_set
    __swig_getmethods__["pfRateOutput"] = _test_engine.SooperLooperI_pfRateOutput_get
    if _newclass:pfRateOutput = _swig_property(_test_engine.SooperLooperI_pfRateOutput_get, _test_engine.SooperLooperI_pfRateOutput_set)
    __swig_setmethods__["pfNextStateOut"] = _test_engine.SooperLooperI_pfNextStateOut_set
    __swig_getmethods__["pfNextStateOut"] = _test_engine.SooperLooperI_pfNextStateOut_get
    if _newclass:pfNextStateOut = _swig_property(_test_engine.SooperLooperI_pfNextStateOut_get, _test_engine.SooperLooperI_pfNextStateOut_set)
    def __init__(self): 
        this = _test_engine.new_SooperLooperI()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _test_engine.delete_SooperLooperI
    __del__ = lambda self : None;
SooperLooperI_swigregister = _test_engine.SooperLooperI_swigregister
SooperLooperI_swigregister(SooperLooperI)


def sl_read_current_loop_audio(*args):
  return _test_engine.sl_read_current_loop_audio(*args)
sl_read_current_loop_audio = _test_engine.sl_read_current_loop_audio

def sl_set_samples_since_sync(*args):
  return _test_engine.sl_set_samples_since_sync(*args)
sl_set_samples_since_sync = _test_engine.sl_set_samples_since_sync

def sl_set_replace_quantized(*args):
  return _test_engine.sl_set_replace_quantized(*args)
sl_set_replace_quantized = _test_engine.sl_set_replace_quantized

def sl_get_replace_quantized(*args):
  return _test_engine.sl_get_replace_quantized(*args)
sl_get_replace_quantized = _test_engine.sl_get_replace_quantized

def sl_set_loop_index(*args):
  return _test_engine.sl_set_loop_index(*args)
sl_set_loop_index = _test_engine.sl_set_loop_index

def sl_has_loop(*args):
  return _test_engine.sl_has_loop(*args)
sl_has_loop = _test_engine.sl_has_loop


